{"hash":"2f1e6c4aa37c57f5c19b351c7ae746c8d8086d7c","data":{"post":{"title":"Gridsome과 Github Pages를 이용해 블로그 만들기","path":"/post/210702-first-post/","date":"2. July 2021","timeToRead":4,"category":{"id":"blog","title":"blog","path":"/category/blog/"},"tags":[{"id":"gridsome","title":"gridsome","path":"/tag/gridsome/","belongsTo":{"edges":[{"node":{"id":"7d2e6a6ab7fbd5a9b38191bfa199a6a1","title":"Gridsome과 Github Pages를 이용해 블로그 만들기","path":"/post/210702-first-post/"}},{"node":{"id":"3212939cc98527e402b2260a94906dea","title":"First oist","path":"/post/first-post/"}},{"node":{"id":"69db3d2af5f559176f34ddd8968f854c","title":"vue-disqus를 이용해 Gridsome 블로그에 댓글 시스템을 달아보자","path":"/post/210702-vue-disqus/"}}]}},{"id":"gh-pages","title":"gh-pages","path":"/tag/gh-pages/","belongsTo":{"edges":[{"node":{"id":"7d2e6a6ab7fbd5a9b38191bfa199a6a1","title":"Gridsome과 Github Pages를 이용해 블로그 만들기","path":"/post/210702-first-post/"}}]}}],"content":"<p>Gridsome을 이용해서 블로그를 개설해보았다.</p>\n<h2 id=\"gridsome-알아보기\"><a href=\"#gridsome-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Gridsome 알아보기</h2>\n<p><a href=\"https://gridsome.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gridsome 홈페이지 바로가기</a></p>\n<p>Gridsome은 간단히 말하자면 Vue.js로 만들어진 정적 사이트 생성기이다.<br>\n마치 Gatsby가 React를 이용해 만들어진 것처럼, Vue에는 Gridsome이 있다. (Gridsome 자체가 Gatsby에서 많은 영향을 받았다고 한다.)</p>\n<h3 id=\"gridsome을-알게-된--사용하게-된-이유\"><a href=\"#gridsome%EC%9D%84-%EC%95%8C%EA%B2%8C-%EB%90%9C--%EC%82%AC%EC%9A%A9%ED%95%98%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Gridsome을 알게 된 &#x26; 사용하게 된 이유</h3>\n<p>이번에 프론트엔드 개발을 시작하면서 배우는 것들이 너무 많아 기술 블로그를 쓰기로 했다.<br>\n깃허브 블로그를 쓰고 싶어 Jekyll로 세팅하려 했는데 팀장님이 Vue로 된 정적 사이트 생성기가 있다고 소개해주셨다.\n아직 만들어진지 오래 되진 않았지만 (2018년인가..로 알고 있다) 문서도 훌륭하고 초기 세팅을 돕는 Starter도 너무 잘 되어있었다.\n덕분에 쾌적하게 블로그를 만들었다 😊</p>\n<hr>\n<h2 id=\"gridsome으로-블로그를-세팅해보자\"><a href=\"#gridsome%EC%9C%BC%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EC%84%B8%ED%8C%85%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Gridsome으로 블로그를 세팅해보자</h2>\n<h3 id=\"1-gridsome을-설치\"><a href=\"#1-gridsome%EC%9D%84-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Gridsome을 설치</h3>\n<p>일단 Gridsome을 설치한다.  </p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">npm install --global @gridsome/cli<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<h3 id=\"2-gridsome-blog-starter-이용해-프로젝트-생성\"><a href=\"#2-gridsome-blog-starter-%EC%9D%B4%EC%9A%A9%ED%95%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Gridsome Blog Starter 이용해 프로젝트 생성</h3>\n<p>Gridsome에서는 아주 깔끔한 starter를 제공한다.\n프로젝트를 생성할 경로로 가서, (폴더 형태로 생성되니 현재 있는 경로가 최종 경로의 상위 경로가 될 것이다.)</p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">gridsome create my-blog https://github.com/gridsome/gridsome-starter-blog.git<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p><code>my-blog</code>는 생성될 프로젝트의 폴더명이므로, 원하는 대로 바꾸면 된다.\n뒤의 git url은 Gridsome Blog Starter에서 제공하는 가장 기본 테마이다. </p>\n<p>나는 <a href=\"https://gridsome.org/starters/flex-markdown-starter/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gridsome Starters</a>에 가서 다른 테마를 골랐다.\n바로 <a href=\"https://gridsome.org/starters/flex-markdown-starter/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이것!</a></p>\n<!-- ![screenshot_flex-markdown-starter](../src/assets/post-images/210702_01.PNG) -->\n<p>여기까지 하면 Blog Starter 세팅은 끝이다!\n<code>package.json</code> 파일에 가보면 scripts에 이 명령이 있는 것을 알 수 있다.</p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">&quot;develop&quot;: &quot;gridsome develop&quot;,<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>콘솔창에 <code>npm run develop</code> 을 입력해주면 (그 전에 <code>npm install</code> 하는 걸 잊지 말자), 로컬에 페이지가 구동된다.</p>\n<h3 id=\"3-내-github-리파지토리-연결\"><a href=\"#3-%EB%82%B4-github-%EB%A6%AC%ED%8C%8C%EC%A7%80%ED%86%A0%EB%A6%AC-%EC%97%B0%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. 내 Github 리파지토리 연결</h3>\n<p>프로젝트 세팅이 끝나면, Github에 새 리파지토리를 만들어 연결해준다.</p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">git remote add origin [새 리파지토리 url]<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<h2 id=\"gh-pages를-이용해-github-pages에-프로젝트-연결하기\"><a href=\"#gh-pages%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-github-pages%EC%97%90-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>gh-pages를 이용해 Github Pages에 프로젝트 연결하기</h2>\n<p>Github Pages에 만든 블로그 프로젝트를 올리려면, 추가 세팅이 필요하다.</p>\n<h3 id=\"1-gh-pages-설치\"><a href=\"#1-gh-pages-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. gh-pages 설치</h3>\n<p>npm에 <code>gh-pages</code>를 설치한다.</p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">npm install gh-pages<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<h3 id=\"2-url-연결\"><a href=\"#2-url-%EC%97%B0%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. url 연결</h3>\n<p><code>gridsome.config.js</code> 파일에 가면, <strong>siteUrl</strong> 이라는 항목이 있다.<br>\nsiteUrl을 다음과 같이 수정하고, 하단에 <strong>pathPrefix</strong> 항목도 추가한다.\n(siteUrl은 기본 경로, pathPrefix는 기본 경로 다음에 붙는 추가 경로이다.)</p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">siteUrl: &#39;https://my-name.github.io&#39;,\npathPrefix: &#39;/my-blog&#39;<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p>위와 같이 수정하면 블로그의 최종 경로는 <a href=\"https://my-name.github.io/my-blog/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://my-name.github.io/my-blog/</a> 가 된다.  </p>\n<h3 id=\"3-deploy-명령어-추가\"><a href=\"#3-deploy-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%B6%94%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. deploy 명령어 추가</h3>\n<p><code>package.json</code>에 가면 scripts 항목이 있다. 그곳에 아래 명령어를 추가한다.</p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">&quot;deploy&quot;: &quot;gridsome build &amp;&amp; gh-pages -d dist&quot;<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>해당 명령어를 실행하면,</p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">npm run deploy<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>dist 폴더가 생성되고 프로젝트가 빌드된다.<br>\n빌드 결과물은 gh-pages 에 자동으로 푸쉬, 연결된다.</p>\n<p>배포 후 몇 초 기다린 다음 설정한 2에서 설정한 url로 이동하면 반영된 화면을 볼 수 있다.</p>\n<hr>\n<p>세팅하면서, <a href=\"https://perade.github.io/blog/make-blog-with-gridsome-2nd/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">아주 정리가 잘 되어있는 블로그 글</a>이 있어 큰 도움을 받았다. 감사합니다...😍</p>\n"},"metadata":{"siteUrl":"https://my-name.github.io","utterances":{"repo":"phoenix741/comments.myblog","issueTerm":"title","label":"discussion"}}},"context":{}}